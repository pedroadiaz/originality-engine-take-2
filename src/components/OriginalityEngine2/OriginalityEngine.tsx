"use client";
/**
 * This code was generated by Builder.io.
 */
import React, { useState, useEffect, createContext } from "react";
import { initialize } from "../../app/service/openai.service";
import Header from "./Header";
import IdeaInput from "../OriginalityEngine1/IdeaInput";
import OpenAI from "openai";
import RecentCampaigns from "./RecentCampaigns";
import MainContent from "../MainContent";
import { AdResponse } from "@/app/models/AdResponse";
import Logo from "../OriginalityEngine/Logo";
import OllySuggestion from "../OriginalityEngine/OllySuggestion";

export const OriginalityEngineContext = createContext<AdResponse | null>(null);

const OriginalityEngine: React.FC = () => {

  const [idea, setIdea] = useState("");  
  const [oeAssistant, setOeAssistant] = React.useState<OpenAI.Beta.Assistants.Assistant | null>(null);
  const [adResponse, setAdResponse] = React.useState<AdResponse | null>(null);

  useEffect(() => {
    initialize().then((assistant) => {
      if (assistant) {
        setOeAssistant(assistant);
      }
    });
  }, []);

  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => { setIdea(event.target.value); };

  const modifyIdea = (updatedIdea: string) => { setIdea(updatedIdea); };

  const handleSubmit = async() => {
    const response = await fetch("/api/ai", { method: "POST", body: JSON.stringify({ prompt: idea }) });
    const data = await response.json();
    const adResponse = data.response as AdResponse;
    setAdResponse(adResponse);
  }

  const handleModify = async() => {
    const response = await fetch("/api/ai", { method: "POST", body: JSON.stringify({ prompt: idea }) });
    const data = await response.json();
    const adResponse = data.response as AdResponse;
    setAdResponse(adResponse);
  }
  return (
    <div className="flex overflow-hidden flex-col bg-slate-900">
      <div className="flex relative flex-col flex-wrap gap-10 pr-20 w-full min-h-[1155px] max-md:pr-5 max-md:max-w-full">
        <img
          loading="lazy"
          src="https://cdn.builder.io/api/v1/image/assets/TEMP/fd7b5ea76ca7d832b50420e87da223a9fd88e1142f55ae3396841578ce336f12?placeholderIfAbsent=true&apiKey=3502b91ecd184de6be2f646c5a302933"
          alt=""
          className="object-cover absolute inset-0 size-full"
        />
        <main className="flex relative flex-col items-start">
          <Logo />
          <IdeaInput onClick={handleSubmit} handleChange={handleChange}/>
          {adResponse && (
            <OllySuggestion adResponse={adResponse} modifyIdea={modifyIdea} handleModify={handleModify}/>
          )}
          <RecentCampaigns />
        </main>
        {adResponse && (
          <aside className="flex relative flex-col items-center my-auto">
            <OriginalityEngineContext.Provider value={adResponse}>
              <MainContent />
            </OriginalityEngineContext.Provider>
          </aside>
        )}

      </div>
    </div>
  );
};

export default OriginalityEngine;
